{"version":3,"sources":["Component/Navbar/Navbar.js","Component/Postdiv/PostDIv.js","Component/PostSection/PostSection.js","Component/Home/Home.js","Component/NoMatch/NoMatch.js","Component/Comment/Comment.js","App.js","index.js"],"names":["useStyles","makeStyles","menuSliderContainer","width","background","height","color","fontSize","sliderText","textAlign","paddingBottom","sliderList","paddingTop","Navbar","slider","classes","useState","left","open","setopen","toggleSlider","isopen","Container","className","Typography","variant","gutterBottom","to","Toolbar","IconButton","edge","aria-label","onClick","bottom","anchor","onClose","Box","component","List","ListItem","button","Link","ListItemText","primary","postStyle","paper","border","borderRadius","minHeight","marginTop","padding","title","postBody","postIconButton","backgroundColor","boxShadow","icon_name","paddingLeft","PostDIv","props","randompost","id","body","likeButtonHandler","showbutton","isItTrue","setIsItTrue","Grid","item","xs","sm","md","key","Paper","container","spacing","justify","alignItems","Button","type","icon","faThumbsUp","faComment","PostSection","randomPosts","useContext","PostContext","slice","map","randomPost","Home","posts","newposts","find","post","likes","document","querySelector","newlike","Math","round","textContent","innerText","notmathcStyle","NotMatchHeader","NoMatch","align","commentImg","margin","position","transform","name","header","Comment","useParams","setPost","useEffect","axios","get","then","res","data","comments","setComments","imageURLs","getImageTag","randomIndex","random","length","comment","alt","src","email","createContext","App","setposts","response","array","i","j","floor","shuffleArray","Provider","value","exact","path","ReactDOM","render","getElementById"],"mappings":"6TASMA,EAAYC,YAAW,CAC3BC,oBAAqB,CACnBC,MAAO,QACPC,WAAY,OACZC,OAAQ,QACRC,MAAO,OACPC,SAAU,UAGZC,WAAY,CACVC,UAAW,SACXC,cAAe,QAGjBC,WAAY,CACVC,WAAY,UA0DDC,EArDA,WACb,IAUuBC,EAVjBC,EAAUf,IADG,EAEKgB,mBAAS,CAC/BC,MAAM,IAHW,mBAEZC,EAFY,KAENC,EAFM,KAObC,EAAe,SAACN,EAAQO,GAC5BF,EAAQ,2BAAKE,GAAN,kBAAeP,EAASO,MAajC,OACE,oCACE,gCACE,kBAACC,EAAA,EAAD,KACE,6BACE,yBAAKC,UAAU,QACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,GACnC,kBAAC,IAAD,CAAMC,GAAG,KAAT,cAGJ,yBAAKJ,UAAU,YACb,wBAAIA,UAAU,WACZ,kBAAC,IAAD,CAAMI,GAAG,KACP,sCAGJ,kBAACC,EAAA,EAAD,CAASL,UAAU,mBACjB,kBAACM,EAAA,EAAD,CAAYC,KAAK,QAAQxB,MAAM,UAAUyB,aAAW,OAAOC,QAAS,kBAAMZ,EAAa,UAAU,KAC/F,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAqBF,KAAMA,EAAKe,OAAQC,OAAO,SAASC,QAAS,kBAAMf,EAAa,UAAU,MA9BrFN,EA+BQ,SA9B7B,kBAACsB,EAAA,EAAD,CAAKb,UAAWR,EAAQb,oBAAqBmC,UAAU,MAAML,QAAS,kBAAMZ,EAAaN,GAAQ,KAC/F,kBAACwB,EAAA,EAAD,CAAMf,UAAWR,EAAQJ,YACvB,kBAAC4B,EAAA,EAAD,CAAUC,QAAM,EAACH,UAAWI,IAAMd,GAAG,KACnC,kBAACe,EAAA,EAAD,CAAcnB,UAAWR,EAAQP,WAAYmC,QAAQ,qB,2CCpCzDC,EAAY3C,YAAW,CAC3B4C,MAAO,CACLC,OAAQ,sBACRC,aAAc,OACd5C,MAAO,OACP6C,UAAW,QACXC,UAAW,OACXC,QAAS,QAEXC,MAAO,CACLD,QAAS,WACT5C,MAAO,WAET8C,SAAU,CACR9C,MAAO,OACPI,cAAe,QAEjB2C,eAAgB,CACdH,QAAS,YACTI,gBAAiB,OACjBnD,MAAO,OACPoD,UAAW,OACXT,OAAQ,sBACRC,aAAc,OAEhBS,UAAW,CACTjD,SAAU,QACVkD,YAAa,UAkEFC,EA9DC,SAACC,GAAU,MAEGA,EAAMC,WAA1BC,EAFiB,EAEjBA,GAAIV,EAFa,EAEbA,MAAOW,EAFM,EAENA,KACXC,EAAkCJ,EAAlCI,kBAAmBC,EAAeL,EAAfK,WAHF,EAIOhD,oBAAS,GAJhB,mBAIlBiD,EAJkB,KAIRC,EAJQ,KAcnBnD,EAAU6B,IAChB,OACE,kBAACuB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,IAAKX,EAAIA,GAAE,aAAQA,IACnD,kBAACY,EAAA,EAAD,CAAOlD,UAAWR,EAAQ8B,OACxB,yBAAKtB,UAAU,SACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACH,UAAWR,EAAQoC,OACtDA,IAGL,yBAAK5B,UAAU,QACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,EAACH,UAAWR,EAAQqC,UACzDU,KAGW,IAAfE,EACC,kBAACG,EAAA,EAAD,CAAMO,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAASC,WAAW,UACtD,kBAACV,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACErD,QAAQ,YACRF,UAAWR,EAAQsC,eACnB0B,KAAK,SACL/C,QAAS,WA5BnBkC,GADe,IAAbD,GA+BUF,EAAkBF,EAAII,KAGxB,kBAAC,IAAD,CAAiBe,KAAMC,MACvB,0BAAM1D,UAAWR,EAAQyC,WAAYK,EAAK,MAG9C,kBAACM,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAACS,EAAA,EAAD,CACEvD,UAAWR,EAAQsC,eACnB1B,GAAE,wBAAmBkC,GACrBpC,QAAQ,YACRY,UAAWI,KAEX,kBAAC,IAAD,CAAiBuC,KAAME,MACvB,0BAAM3D,UAAWR,EAAQyC,WAAzB,cAIJ,QCnEG2B,EAvBK,SAACxB,GACnB,IAEMyB,EAFQC,qBAAWC,GAECC,MAAM,EAAG,IACnC,OACE,oCACE,kBAACjE,EAAA,EAAD,KACE,kBAAC6C,EAAA,EAAD,CAAMO,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAASC,WAAW,UAErDO,EAAYI,KAAI,SAACC,GAAD,OACf,kBAAC,EAAD,CACE7B,WAAY6B,EACZ1B,kBAAmBJ,EAAMI,kBACzBS,IAAKiB,EAAW5B,GAChBG,YAAY,WCQX0B,EAvBF,WACX,IAAMC,EAAQN,qBAAWC,GAczB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAavB,kBAdS,SAACF,EAAII,GAC7B,IAAM2B,EAAWD,EAAME,MAAK,SAACC,GAAD,OAAUA,EAAKjC,KAAOA,KAC9CkC,EAAQC,SAASC,cAAT,cAA8BL,EAAS/B,GAAvC,sBACZ,IAAiB,IAAbI,EAAmB,CACrB,IAAIiC,EAAUC,KAAKC,MAAML,EAAMM,aAAe,EAC9CN,EAAMO,UAAYJ,MACb,CACL,IAAIA,EAAUC,KAAKC,MAAML,EAAMM,aAAe,EAC9CN,EAAMM,YAAcH,Q,OCZpBK,EAAgBtG,YAAW,CAC/BuG,eAAgB,CACdvD,UAAW,MACX3C,MAAO,SAeImG,EAXC,WACd,IAAM1F,EAAUwF,IAChB,OACE,6BACE,kBAAC/E,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACgF,MAAM,SAASnF,UAAWR,EAAQyF,gBAAxE,uB,iBCNAG,EAAa1G,YAAW,CAC5B0G,WAAY,CACVxG,MAAO,QACPE,OAAQ,QACR0C,aAAc,MACd6D,OAAQ,OACRC,SAAU,WACV5F,KAAM,MACN6F,UAAW,oBAEbjE,MAAO,CACLC,OAAQ,sBACRC,aAAc,OACd5C,MAAO,OACP6C,UAAW,QACXC,UAAW,OACXC,QAAS,QAGX6D,KAAM,CACJrG,cAAe,OACfJ,MAAO,WAET0G,OAAQ,CACNpG,WAAY,OACZN,MAAO,aAiFI2G,EA7EC,WACd,IAAMlG,EAAU4F,IACR9C,EAAOqD,cAAPrD,GAFY,EAII7C,mBAAS,IAJb,mBAIb8E,EAJa,KAIPqB,EAJO,KAKpBC,qBAAU,WACRC,IAAMC,IAAN,qDAAwDzD,IAAM0D,MAAK,SAACC,GAAD,OAASL,EAAQK,EAAIC,WACvF,CAAC5D,IAPgB,MAUY7C,mBAAS,IAVrB,mBAUb0G,EAVa,KAUHC,EAVG,KAWpBP,qBAAU,WACRC,IAAMC,IAAN,+DAAkEzD,IAAM0D,MAAK,SAACC,GAAD,OAASG,EAAYH,EAAIC,WACrG,CAAC5D,IAGJ,IAAM+D,EAAY,CAAC,0CAAD,4VAWZC,EAAc,WAClB,IAAIC,EAAc3B,KAAKC,MAAMD,KAAK4B,SAAWH,EAAUI,QAEvD,OADUJ,EAAUE,IAGtB,OACE,oCACE,kBAAC,EAAD,MACA,kBAACxG,EAAA,EAAD,KACE,kBAAC6C,EAAA,EAAD,CAAMO,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAASC,WAAW,UACtD,kBAAC,EAAD,CAASjB,WAAYkC,EAAM9B,YAAY,KAEzC,kBAACG,EAAA,EAAD,CAAMO,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAASC,WAAW,UACtD,kBAACV,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC7C,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACH,UAAWR,EAAQiG,OAAQN,MAAM,UAAvE,cAKJ,kBAACvC,EAAA,EAAD,CAAMO,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAASC,WAAW,UACrD6C,EAASlC,KAAI,SAACyC,GAAD,OACZ,kBAAC9D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,IAAKyD,EAAQpE,IAC7C,kBAACY,EAAA,EAAD,CAAOlD,UAAWR,EAAQ8B,OACxB,kBAACsB,EAAA,EAAD,CAAMO,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAASC,WAAW,UACtD,kBAACV,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC5B,yBAAK2D,IAAI,MAAMC,IAAKN,IAAetG,UAAWR,EAAQ4F,cAEzD,kBAACxC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC7B,kBAAC/C,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACH,UAAWR,EAAQgG,MACtDkB,EAAQlB,MAEX,kBAACvF,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GAAxC,UACUuG,EAAQG,QAGpB,kBAACjE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACb,kBAAC7C,EAAA,EAAD,CAAYC,QAAQ,QAAQC,cAAY,GACrCuG,EAAQnE,iBC9FlBwB,EAAc+C,0BA0CZC,MAlCf,WAAe,MAEatH,mBAAS,IAFtB,mBAEN2E,EAFM,KAEC4C,EAFD,KAUb,OAPAnB,qBAAU,WACRC,IAAMC,IAAN,8CAAwDC,MAAK,SAACiB,GAC5D,IAAMf,EAAOe,EAASf,MAX5B,SAAsBgB,GACpB,IAAK,IAAIC,EAAID,EAAMT,OAAS,EAAGU,EAAI,EAAGA,IAAK,CACzC,IAAMC,EAAIxC,KAAKyC,MAAMzC,KAAK4B,UAAYW,EAAI,IADD,EAElB,CAACD,EAAME,GAAIF,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAME,GAFwB,MAWvCE,CAAapB,GACbc,EAASd,QAEV,IAED,oCACE,kBAAC,IAAD,KACE,kBAACnC,EAAYwD,SAAb,CAAsBC,MAAOpD,GAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,SAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,qBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,YCrCdC,IAASC,OAAO,kBAAC,EAAD,MAASnD,SAASoD,eAAe,U","file":"static/js/main.4a993db8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { Container, Typography, Toolbar, IconButton, Box, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MobilLeftMenuSlider from \"@material-ui/core/Drawer\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//css style the slide bar\r\nconst useStyles = makeStyles({\r\n  menuSliderContainer: {\r\n    width: \"100vw\",\r\n    background: \"#000\",\r\n    height: \"30rem\",\r\n    color: \"#fff\",\r\n    fontSize: \" 1.5em\",\r\n  },\r\n\r\n  sliderText: {\r\n    textAlign: \"center\",\r\n    paddingBottom: \"15px\",\r\n  },\r\n\r\n  sliderList: {\r\n    paddingTop: \"80px\",\r\n  },\r\n});\r\n\r\n//setting the state is side navbar is open or not\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const [open, setopen] = useState({\r\n    left: false,\r\n  });\r\n\r\n  // toggling the nav icon\r\n  const toggleSlider = (slider, isopen) => {\r\n    setopen({ ...isopen, [slider]: isopen });\r\n  };\r\n\r\n  const sliderSection = (slider) => (\r\n    <Box className={classes.menuSliderContainer} component=\"div\" onClick={() => toggleSlider(slider, false)}>\r\n      <List className={classes.sliderList}>\r\n        <ListItem button component={Link} to=\"/\">\r\n          <ListItemText className={classes.sliderText} primary=\"Home\" />\r\n        </ListItem>\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Container>\r\n          <nav>\r\n            <div className=\"logo\">\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                <Link to=\"/\">FackBook</Link>\r\n              </Typography>\r\n            </div>\r\n            <div className=\"nav_menu\">\r\n              <ul className=\"desktop\">\r\n                <Link to=\"/\">\r\n                  <li>Home</li>\r\n                </Link>\r\n              </ul>\r\n              <Toolbar className=\"nav_icon mobile\">\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => toggleSlider(\"bottom\", true)}>\r\n                  <MenuIcon />\r\n                </IconButton>\r\n                <MobilLeftMenuSlider open={open.bottom} anchor=\"bottom\" onClose={() => toggleSlider(\"bottom\", false)}>\r\n                  {sliderSection(\"bottom\")}\r\n                </MobilLeftMenuSlider>\r\n              </Toolbar>\r\n            </div>\r\n          </nav>\r\n        </Container>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faComment, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// material ui poststyle\r\nconst postStyle = makeStyles({\r\n  paper: {\r\n    border: \"2px soild lightgray\",\r\n    borderRadius: \"10px\",\r\n    width: \"100%\",\r\n    minHeight: \"200px\",\r\n    marginTop: \"80px\",\r\n    padding: \"30px\",\r\n  },\r\n  title: {\r\n    padding: \"10px 0px\",\r\n    color: \"#FF5733\",\r\n  },\r\n  postBody: {\r\n    color: \"#000\",\r\n    paddingBottom: \"15px\",\r\n  },\r\n  postIconButton: {\r\n    padding: \"10px 20px\",\r\n    backgroundColor: \"#fff\",\r\n    width: \"100%\",\r\n    boxShadow: \"none\",\r\n    border: \"1px solid lightgray\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  icon_name: {\r\n    fontSize: \"0.8em\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n});\r\n\r\nconst PostDIv = (props) => {\r\n  // destructuring props\r\n  const { id, title, body } = props.randompost;\r\n  const { likeButtonHandler, showbutton } = props;\r\n  const [isItTrue, setIsItTrue] = useState(false);\r\n  const likeOrNot = () => {\r\n    if (isItTrue === false) {\r\n      setIsItTrue(true);\r\n      return isItTrue;\r\n    } else {\r\n      setIsItTrue(false);\r\n      return isItTrue;\r\n    }\r\n  };\r\n  const classes = postStyle();\r\n  return (\r\n    <Grid item xs={12} sm={10} md={8} key={id} id={`id-${id}`}>\r\n      <Paper className={classes.paper}>\r\n        <div className=\"title\">\r\n          <Typography variant=\"h5\" gutterBottom className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n        </div>\r\n        <div className=\"post\">\r\n          <Typography variant=\"body1\" gutterBottom className={classes.postBody}>\r\n            {body}\r\n          </Typography>\r\n        </div>\r\n        {showbutton === true ? (\r\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={5}>\r\n              <Button\r\n                variant=\"contained\"\r\n                className={classes.postIconButton}\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  likeOrNot();\r\n                  likeButtonHandler(id, isItTrue);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faThumbsUp} />\r\n                <span className={classes.icon_name}>{id + 20}</span>\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Button\r\n                className={classes.postIconButton}\r\n                to={`/comment/user/${id}`}\r\n                variant=\"contained\"\r\n                component={Link}\r\n              >\r\n                <FontAwesomeIcon icon={faComment} />\r\n                <span className={classes.icon_name}>Comment</span>\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        ) : null}\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PostDIv;\r\n","import React, { useContext } from \"react\";\r\nimport { Grid, Container } from \"@material-ui/core\";\r\nimport { PostContext } from \"../../App\";\r\nimport PostDIv from \"../Postdiv/PostDIv\";\r\n\r\nconst PostSection = (props) => {\r\n  const posts = useContext(PostContext);\r\n  // slicking the post array\r\n  const randomPosts = posts.slice(0, 12);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n          {/* dynamic post  */}\r\n          {randomPosts.map((randomPost) => (\r\n            <PostDIv\r\n              randompost={randomPost}\r\n              likeButtonHandler={props.likeButtonHandler}\r\n              key={randomPost.id}\r\n              showbutton={true}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostSection;\r\n","import React, { useContext } from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport PostSection from \"../PostSection/PostSection\";\r\nimport { PostContext } from \"../../App\";\r\nconst Home = () => {\r\n  const posts = useContext(PostContext);\r\n\r\n  // like button handler\r\n  const likeButtonHandler = (id, isItTrue) => {\r\n    const newposts = posts.find((post) => post.id === id);\r\n    let likes = document.querySelector(`#id-${newposts.id} button span span`);\r\n    if (isItTrue === true) {\r\n      let newlike = Math.round(likes.textContent) - 1;\r\n      likes.innerText = newlike;\r\n    } else {\r\n      let newlike = Math.round(likes.textContent) + 1;\r\n      likes.textContent = newlike;\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <PostSection likeButtonHandler={likeButtonHandler} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst notmathcStyle = makeStyles({\r\n  NotMatchHeader: {\r\n    marginTop: \"25%\",\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nconst NoMatch = () => {\r\n  const classes = notmathcStyle();\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h1\" gutterBottom align=\"center\" className={classes.NotMatchHeader}>\r\n        Sorry , Not Found\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, Grid, Typography, Paper } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport PostDIv from \"../Postdiv/PostDIv\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\n// material ui style\r\nconst commentImg = makeStyles({\r\n  commentImg: {\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n    borderRadius: \"50%\",\r\n    margin: \"auto\",\r\n    position: \"relative\",\r\n    left: \"50%\",\r\n    transform: \"translateX(-50%)\",\r\n  },\r\n  paper: {\r\n    border: \"2px soild lightgray\",\r\n    borderRadius: \"10px\",\r\n    width: \"100%\",\r\n    minHeight: \"200px\",\r\n    marginTop: \"20px\",\r\n    padding: \"30px\",\r\n  },\r\n\r\n  name: {\r\n    paddingBottom: \"15px\",\r\n    color: \"#02b875\",\r\n  },\r\n  header: {\r\n    paddingTop: \"10px\",\r\n    color: \"#02b875\",\r\n  },\r\n});\r\n\r\nconst Comment = () => {\r\n  const classes = commentImg();\r\n  const { id } = useParams();\r\n  // api call for post\r\n  const [post, setPost] = useState([]);\r\n  useEffect(() => {\r\n    axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`).then((res) => setPost(res.data));\r\n  }, [id]);\r\n\r\n  // api call for comment\r\n  const [comments, setComments] = useState([]);\r\n  useEffect(() => {\r\n    axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${id}`).then((res) => setComments(res.data));\r\n  }, [id]);\r\n\r\n  // random img genarator\r\n  const imageURLs = [\r\n    `https://source.unsplash.com/random/?man`,\r\n    `https://source.unsplash.com/random/?anime`,\r\n    `https://source.unsplash.com/random/?animal`,\r\n    `https://source.unsplash.com/random/?cat`,\r\n    `https://source.unsplash.com/random/?dog`,\r\n    `https://source.unsplash.com/random/?nature`,\r\n    `https://source.unsplash.com/random/?food`,\r\n    `https://source.unsplash.com/random/?city`,\r\n    `https://source.unsplash.com/random/?logo`,\r\n  ];\r\n  const getImageTag = () => {\r\n    let randomIndex = Math.round(Math.random() * imageURLs.length);\r\n    let img = imageURLs[randomIndex];\r\n    return img;\r\n  };\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container>\r\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n          <PostDIv randompost={post} showbutton={false}></PostDIv>\r\n        </Grid>\r\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={8}>\r\n            <Typography variant=\"h6\" gutterBottom className={classes.header} align=\"center\">\r\n              Comments\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n          {comments.map((comment) => (\r\n            <Grid item xs={12} sm={10} md={8} key={comment.id}>\r\n              <Paper className={classes.paper}>\r\n                <Grid container spacing={4} justify=\"center\" alignItems=\"center\">\r\n                  <Grid item xs={12} sm={12} md={4}>\r\n                    {<img alt=\"man\" src={getImageTag()} className={classes.commentImg} />}\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={12} md={8}>\r\n                    <Typography variant=\"h6\" gutterBottom className={classes.name}>\r\n                      {comment.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" gutterBottom>\r\n                      Email :{comment.email}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      {comment.body}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { createContext, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Home from \"./Component/Home/Home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NoMatch from \"./Component/NoMatch/NoMatch\";\nimport Comment from \"./Component/Comment/Comment\";\nimport axios from \"axios\";\n\nexport const PostContext = createContext();\n// shuffle the api data\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\nfunction App() {\n  // calling post api\n  const [posts, setposts] = useState([]);\n  useEffect(() => {\n    axios.get(`https://jsonplaceholder.typicode.com/posts`).then((response) => {\n      const data = response.data;\n      shuffleArray(data);\n      setposts(data);\n    });\n  }, []);\n  return (\n    <>\n      <Router>\n        <PostContext.Provider value={posts}>\n          <Switch>\n            <Route exact path=\"/home\">\n              <Home />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/comment/user/:id\">\n              <Comment />\n            </Route>\n            <Route path=\"*\">\n              <NoMatch />\n            </Route>\n          </Switch>\n        </PostContext.Provider>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}